{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filterText","handleFilterText","value","onChange","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","Persons","persons","removePerson","map","person","key","name","number","onClick","Notification","message","style","App","useState","setPersons","setFilterText","setNewName","setNewNumber","setMessage","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","notificationStyle","setNotificationStyle","personsToShow","filter","toLowerCase","includes","useEffect","personsService","initialPersons","displayMessage","setTimeout","event","target","preventDefault","newPerson","some","oldPerson","find","window","confirm","returnedPerson","catch","error","concat","personDelete","removedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bec3b056.chunk.js","sourcesContent":["import axios from 'axios';\r\n// const baseUrl = 'http://localhost:3001/api/persons';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default { getAll, create, remove, update };\r\n","import React from 'react';\r\n\r\nconst Filter = ({filterText, handleFilterText}) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={filterText} onChange={handleFilterText} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n  addPerson,\r\n  newName,\r\n  handleNewName,\r\n  newNumber,\r\n  handleNewNumber,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNewName} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNewNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Persons = ({ persons, removePerson }) => {\r\n  return (\r\n    <>\r\n      {persons.map(person => (\r\n        <p key={person.name}>\r\n          {`${person.name} ${person.number}`}\r\n          <button type=\"button\" onClick={() => removePerson(person)}>\r\n            delete\r\n          </button>\r\n        </p>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message, style }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div style={style}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\nimport personsService from './services/persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterText, setFilterText] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [message, setMessage] = useState(null);\n  const [notificationStyle, setNotificationStyle] = useState({\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  });\n\n  const personsToShow =\n    filterText === ''\n      ? persons\n      : persons.filter(person =>\n          person.name.toLowerCase().includes(filterText.toLowerCase()),\n        );\n\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const displayMessage = (message, color) => {\n    setNotificationStyle({ ...notificationStyle, color });\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = { name: newName, number: newNumber };\n\n    if (persons.some(person => person.name === newPerson.name)) {\n      const oldPerson = persons.find(person => person.name === newPerson.name);\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook. Would you like to replace the old number with the new one?`,\n        )\n      ) {\n        personsService\n          .update(oldPerson.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(\n              persons.map(person =>\n                person.id !== returnedPerson.id ? person : returnedPerson,\n              ),\n            );\n            setNewName('');\n            setNewNumber('');\n            displayMessage(`Changed ${returnedPerson.name}'s number.`, 'green');\n          })\n          .catch(error => {\n            displayMessage(\n              `Information of ${newPerson.name} has already been removed from the server.`,\n              'red',\n            );\n          });\n      }\n      return;\n    }\n\n    personsService.create(newPerson).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson));\n      setNewName('');\n      setNewNumber('');\n      displayMessage(`Added ${returnedPerson.name}.`, 'green');\n    });\n  };\n\n  const handleFilterText = event => {\n    setFilterText(event.target.value);\n  };\n\n  const handleNewName = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleRemovePerson = personDelete => {\n    if (window.confirm(`Delete ${personDelete.name}?`)) {\n      personsService\n        .remove(personDelete.id)\n        .then(removedPerson => {\n          setPersons(persons.filter(person => person.id !== personDelete.id));\n        })\n        .catch(error => {\n          displayMessage(`Error deleting ${personDelete.name}.`);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} style={notificationStyle} />\n      <Filter filterText={filterText} handleFilterText={handleFilterText} />\n      <h3>Add a new person</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNewName={handleNewName}\n        newNumber={newNumber}\n        handleNewNumber={handleNewNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} removePerson={handleRemovePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}